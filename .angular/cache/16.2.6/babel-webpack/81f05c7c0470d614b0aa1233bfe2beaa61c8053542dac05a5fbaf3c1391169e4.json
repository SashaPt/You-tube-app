{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterPipe {\n  /* eslint-disable class-methods-use-this */\n  transform(value, substring) {\n    if (!substring?.trim()) {\n      return value;\n    }\n    return value.filter(i => i.snippet.title.toLowerCase().includes(substring.toLowerCase()));\n  }\n  static #_ = this.ɵfac = function FilterPipe_Factory(t) {\n    return new (t || FilterPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"filter\",\n    type: FilterPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["FilterPipe","transform","value","substring","trim","filter","i","snippet","title","toLowerCase","includes","_","_2","pure"],"sources":["C:\\Users\\USER\\Documents\\Learning\\RS\\Angular\\YouTube-app5\\sashapt-ANGULAR2023Q4\\src\\app\\youtube\\pipes\\filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { IItem } from '../models/search-item.model';\r\n\r\n@Pipe({\r\n  name: 'filter',\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  /* eslint-disable class-methods-use-this */\r\n  transform(value: IItem[], substring: string): IItem[] {\r\n    if (!substring?.trim()) {\r\n      return value;\r\n    }\r\n    return value.filter((i) => i.snippet.title.toLowerCase().includes(substring.toLowerCase()));\r\n  }\r\n  /* eslint-enable class-methods-use-this */\r\n}\r\n"],"mappings":";AAMA,OAAM,MAAOA,UAAU;EACrB;EACAC,SAASA,CAACC,KAAc,EAAEC,SAAiB;IACzC,IAAI,CAACA,SAAS,EAAEC,IAAI,EAAE,EAAE;MACtB,OAAOF,KAAK;;IAEd,OAAOA,KAAK,CAACG,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,OAAO,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,SAAS,CAACM,WAAW,EAAE,CAAC,CAAC;EAC7F;EAAC,QAAAE,CAAA,G;qBAPUX,UAAU;EAAA;EAAA,QAAAY,EAAA,G;;UAAVZ,UAAU;IAAAa,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}