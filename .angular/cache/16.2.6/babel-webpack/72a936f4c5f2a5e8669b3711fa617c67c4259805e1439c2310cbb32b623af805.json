{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.userLogin = 'user@login.com';\n    this.userPassword = 'User_Password1';\n    this.isLogin = false;\n  }\n  compareAuth(auth) {\n    if (auth.login === this.userLogin && auth.password === this.userPassword) {\n      return true;\n    }\n    return false;\n  }\n  login(auth) {\n    if (this.compareAuth(auth)) {\n      localStorage.setItem('user', JSON.stringify({\n        auth\n      }));\n      this.isLogin = true;\n      return true;\n    }\n    return false;\n  }\n  /* eslint-disable class-methods-use-this */\n  logout() {\n    localStorage.removeItem('user');\n    this.isLogin = false;\n    return false;\n  }\n  /* eslint-enable class-methods-use-this */\n  /* eslint-disable class-methods-use-this */\n  getIsLoggedIn() {\n    if (localStorage.getItem('user')) {\n      return true;\n    }\n    return false;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","userLogin","userPassword","isLogin","compareAuth","auth","login","password","localStorage","setItem","JSON","stringify","logout","removeItem","getIsLoggedIn","getItem","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Documents\\Learning\\RS\\Angular\\YouTube-app5\\sashapt-ANGULAR2023Q4\\src\\app\\auth\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { IAuth } from '../models/auth.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  userLogin = 'user@login.com';\n\n  userPassword = 'User_Password1';\n\n  isLogin = false;\n\n  compareAuth(auth: IAuth) {\n    if (auth.login === this.userLogin && auth.password === this.userPassword) {\n      return true;\n    }\n    return false;\n  }\n\n  login(auth: IAuth) {\n    if (this.compareAuth(auth)) {\n      localStorage.setItem('user', JSON.stringify({ auth }));\n      this.isLogin = true;\n      return true;\n    }\n    return false;\n  }\n\n  /* eslint-disable class-methods-use-this */\n  logout() {\n    localStorage.removeItem('user');\n    this.isLogin = false;\n    return false;\n  }\n  /* eslint-enable class-methods-use-this */\n\n  /* eslint-disable class-methods-use-this */\n  getIsLoggedIn() {\n    if (localStorage.getItem('user')) {\n      return true;\n    }\n    return false;\n  }\n  /* eslint-enable class-methods-use-this */\n}\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EAHxBC,YAAA;IAIE,KAAAC,SAAS,GAAG,gBAAgB;IAE5B,KAAAC,YAAY,GAAG,gBAAgB;IAE/B,KAAAC,OAAO,GAAG,KAAK;;EAEfC,WAAWA,CAACC,IAAW;IACrB,IAAIA,IAAI,CAACC,KAAK,KAAK,IAAI,CAACL,SAAS,IAAII,IAAI,CAACE,QAAQ,KAAK,IAAI,CAACL,YAAY,EAAE;MACxE,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEAI,KAAKA,CAACD,IAAW;IACf,IAAI,IAAI,CAACD,WAAW,CAACC,IAAI,CAAC,EAAE;MAC1BG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN;MAAI,CAAE,CAAC,CAAC;MACtD,IAAI,CAACF,OAAO,GAAG,IAAI;MACnB,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEA;EACAS,MAAMA,CAAA;IACJJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACV,OAAO,GAAG,KAAK;IACpB,OAAO,KAAK;EACd;EACA;EAEA;EACAW,aAAaA,CAAA;IACX,IAAIN,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC,EAAE;MAChC,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAAC,QAAAC,CAAA,G;qBArCUjB,WAAW;EAAA;EAAA,QAAAkB,EAAA,G;WAAXlB,WAAW;IAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}