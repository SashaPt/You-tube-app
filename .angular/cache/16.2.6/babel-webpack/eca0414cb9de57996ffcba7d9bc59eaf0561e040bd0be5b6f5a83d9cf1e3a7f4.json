{"ast":null,"code":"export function StrongPasswordValidator() {\n  return control => {\n    if (!control.value || !control.value.length) {\n      return null;\n    }\n    const notLength = control.value.length < 8;\n    if (notLength) {\n      return {\n        strongPassword: {\n          value: control.value,\n          message: 'at least 8 characters'\n        }\n      };\n    }\n    const notCase = !(/[A-Z]/.test(control.value) && /[a-z]/.test(control.value));\n    if (notCase) {\n      return {\n        strongPassword: {\n          value: control.value,\n          message: 'a mixture of both uppercase and lowercase letters'\n        }\n      };\n    }\n    const notNums = !/[0-9]/.test(control.value);\n    if (notNums) {\n      return {\n        strongPassword: {\n          value: control.value,\n          message: 'a mixture of letters and numbers'\n        }\n      };\n    }\n    const chars = /[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/;\n    const notChars = !chars.test(control.value);\n    if (notChars) {\n      return {\n        strongPassword: {\n          value: control.value,\n          message: 'inclusion of at least one special character, e.g., ! @ # ? ]'\n        }\n      };\n    }\n    return null;\n  };\n}","map":{"version":3,"names":["StrongPasswordValidator","control","value","length","notLength","strongPassword","message","notCase","test","notNums","chars","notChars"],"sources":["C:\\Users\\USER\\OneDrive\\Документы\\Youtube-App\\src\\app\\auth\\validators\\strong-password.validator.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport function StrongPasswordValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (!control.value || !control.value.length) {\n      return null;\n    }\n    const notLength = control.value.length < 8;\n    if (notLength) {\n      return {\n        strongPassword: {\n          value: control.value,\n          message: 'at least 8 characters',\n        },\n      };\n    }\n    const notCase = !(\n      /[A-Z]/.test(control.value) && /[a-z]/.test(control.value)\n    );\n    if (notCase) {\n      return {\n        strongPassword: {\n          value: control.value,\n          message: 'a mixture of both uppercase and lowercase letters',\n        },\n      };\n    }\n    const notNums = !/[0-9]/.test(control.value);\n    if (notNums) {\n      return {\n        strongPassword: {\n          value: control.value,\n          message: 'a mixture of letters and numbers',\n        },\n      };\n    }\n    const chars = /[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/;\n    const notChars = !chars.test(control.value);\n    if (notChars) {\n      return {\n        strongPassword: {\n          value: control.value,\n          message:\n            'inclusion of at least one special character, e.g., ! @ # ? ]',\n        },\n      };\n    }\n\n    return null;\n  };\n}\n"],"mappings":"AAEA,OAAM,SAAUA,uBAAuBA,CAAA;EACrC,OAAQC,OAAwB,IAA6B;IAC3D,IAAI,CAACA,OAAO,CAACC,KAAK,IAAI,CAACD,OAAO,CAACC,KAAK,CAACC,MAAM,EAAE;MAC3C,OAAO,IAAI;;IAEb,MAAMC,SAAS,GAAGH,OAAO,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC;IAC1C,IAAIC,SAAS,EAAE;MACb,OAAO;QACLC,cAAc,EAAE;UACdH,KAAK,EAAED,OAAO,CAACC,KAAK;UACpBI,OAAO,EAAE;;OAEZ;;IAEH,MAAMC,OAAO,GAAG,EACd,OAAO,CAACC,IAAI,CAACP,OAAO,CAACC,KAAK,CAAC,IAAI,OAAO,CAACM,IAAI,CAACP,OAAO,CAACC,KAAK,CAAC,CAC3D;IACD,IAAIK,OAAO,EAAE;MACX,OAAO;QACLF,cAAc,EAAE;UACdH,KAAK,EAAED,OAAO,CAACC,KAAK;UACpBI,OAAO,EAAE;;OAEZ;;IAEH,MAAMG,OAAO,GAAG,CAAC,OAAO,CAACD,IAAI,CAACP,OAAO,CAACC,KAAK,CAAC;IAC5C,IAAIO,OAAO,EAAE;MACX,OAAO;QACLJ,cAAc,EAAE;UACdH,KAAK,EAAED,OAAO,CAACC,KAAK;UACpBI,OAAO,EAAE;;OAEZ;;IAEH,MAAMI,KAAK,GAAG,uCAAuC;IACrD,MAAMC,QAAQ,GAAG,CAACD,KAAK,CAACF,IAAI,CAACP,OAAO,CAACC,KAAK,CAAC;IAC3C,IAAIS,QAAQ,EAAE;MACZ,OAAO;QACLN,cAAc,EAAE;UACdH,KAAK,EAAED,OAAO,CAACC,KAAK;UACpBI,OAAO,EACL;;OAEL;;IAGH,OAAO,IAAI;EACb,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}