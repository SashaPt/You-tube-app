{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst HTTP_URL = 'https://www.googleapis.com/youtube/v3/';\nconst HTTP_KEY = 'AIzaSyCaIsx1V1ywnN-Selao8dbuKMf2_a-BOuY';\nexport class YoutubeService {\n  constructor(http) {\n    this.http = http;\n    this.items = [];\n  }\n  setItems() {\n    // this.items = this.response.items;\n    this.http.get(`${HTTP_URL}search?key=${HTTP_KEY}&type=video&part=snippet&maxResults=8&q=js`).subscribe(resp => {\n      console.log(resp);\n    });\n  }\n  getItems() {\n    return this.items;\n  }\n  getItem(id) {\n    return this.response.items.filter(i => i.id === id)[0];\n  }\n  static #_ = this.ɵfac = function YoutubeService_Factory(t) {\n    return new (t || YoutubeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: YoutubeService,\n    factory: YoutubeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HTTP_URL","HTTP_KEY","YoutubeService","constructor","http","items","setItems","get","subscribe","resp","console","log","getItems","getItem","id","response","filter","i","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Documents\\Learning\\RS\\Angular\\YouTube-app5\\sashapt-ANGULAR2023Q4\\src\\app\\youtube\\services\\youtube.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n// import { Observable } from 'rxjs';\nimport { IResponse } from '../models/search-response.model';\nimport { IItem } from '../models/search-item.model';\n\nconst HTTP_URL = 'https://www.googleapis.com/youtube/v3/';\nconst HTTP_KEY = 'AIzaSyCaIsx1V1ywnN-Selao8dbuKMf2_a-BOuY';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class YoutubeService {\n  constructor(private http: HttpClient) {}\n\n  response!: IResponse;\n\n  items: IItem[] = [];\n\n  setItems() {\n    // this.items = this.response.items;\n    this.http.get(`${HTTP_URL}search?key=${HTTP_KEY}&type=video&part=snippet&maxResults=8&q=js`).subscribe((resp) => {\n      console.log(resp);\n    });\n  }\n\n  getItems(): IItem[] {\n    return this.items;\n  }\n\n  getItem(id: string): IItem {\n    return this.response.items.filter((i) => i.id === id)[0];\n  }\n}\n"],"mappings":";;AAMA,MAAMA,QAAQ,GAAG,wCAAwC;AACzD,MAAMC,QAAQ,GAAG,yCAAyC;AAK1D,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAIxB,KAAAC,KAAK,GAAY,EAAE;EAJoB;EAMvCC,QAAQA,CAAA;IACN;IACA,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAGP,QAAQ,cAAcC,QAAQ,4CAA4C,CAAC,CAACO,SAAS,CAAEC,IAAI,IAAI;MAC9GC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;EAEAG,QAAQA,CAAA;IACN,OAAO,IAAI,CAACP,KAAK;EACnB;EAEAQ,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACC,QAAQ,CAACV,KAAK,CAACW,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1D;EAAC,QAAAI,CAAA,G;qBApBUhB,cAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdrB,cAAc;IAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}