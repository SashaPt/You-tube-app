{"ast":null,"code":"import { Subject, debounceTime, distinctUntilChanged, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./youtube.service\";\nexport class SearchService {\n  constructor(youtubeService) {\n    this.youtubeService = youtubeService;\n    this.searchValue = '';\n    this.searchSubject = new Subject();\n  }\n  onSearch(value) {\n    this.searchSubject.next(value);\n  }\n  onSubscribe() {\n    this.searchSubscription = this.searchSubject.pipe(debounceTime(500), distinctUntilChanged(),\n    // eslint-disable-next-line no-return-assign\n    switchMap(query => this.searchValue = query || '')).subscribe(() => {\n      this.youtubeService.searchItems(this.searchValue).subscribe(resp => resp.items);\n    });\n  }\n  onUnsubscribe() {\n    this.searchSubscription?.unsubscribe();\n  }\n  static #_ = this.ɵfac = function SearchService_Factory(t) {\n    return new (t || SearchService)(i0.ɵɵinject(i1.YoutubeService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchService,\n    factory: SearchService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Subject","debounceTime","distinctUntilChanged","switchMap","SearchService","constructor","youtubeService","searchValue","searchSubject","onSearch","value","next","onSubscribe","searchSubscription","pipe","query","subscribe","searchItems","resp","items","onUnsubscribe","unsubscribe","_","i0","ɵɵinject","i1","YoutubeService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Documents\\Learning\\RS\\Angular\\YouTube-app5\\sashapt-ANGULAR2023Q4\\src\\app\\youtube\\services\\search.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Subject,\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  switchMap,\n} from 'rxjs';\nimport { YoutubeService } from './youtube.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  searchValue = '';\n\n  searchSubscription?: Subscription;\n\n  searchSubject = new Subject<string>();\n\n  constructor(private youtubeService: YoutubeService) {}\n\n  onSearch(value: string): void {\n    this.searchSubject.next(value);\n  }\n\n  onSubscribe() {\n    this.searchSubscription = this.searchSubject\n      .pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        // eslint-disable-next-line no-return-assign\n        switchMap((query) => (this.searchValue = query || '')),\n      )\n      .subscribe(() => {\n        this.youtubeService.searchItems(this.searchValue).subscribe((resp) => resp.items);\n      });\n  }\n\n  onUnsubscribe() {\n    this.searchSubscription?.unsubscribe();\n  }\n}\n"],"mappings":"AACA,SACEA,OAAO,EAEPC,YAAY,EACZC,oBAAoB,EACpBC,SAAS,QACJ,MAAM;;;AAMb,OAAM,MAAOC,aAAa;EAOxBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IANlC,KAAAC,WAAW,GAAG,EAAE;IAIhB,KAAAC,aAAa,GAAG,IAAIR,OAAO,EAAU;EAEgB;EAErDS,QAAQA,CAACC,KAAa;IACpB,IAAI,CAACF,aAAa,CAACG,IAAI,CAACD,KAAK,CAAC;EAChC;EAEAE,WAAWA,CAAA;IACT,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACL,aAAa,CACzCM,IAAI,CACHb,YAAY,CAAC,GAAG,CAAC,EACjBC,oBAAoB,EAAE;IACtB;IACAC,SAAS,CAAEY,KAAK,IAAM,IAAI,CAACR,WAAW,GAAGQ,KAAK,IAAI,EAAG,CAAC,CACvD,CACAC,SAAS,CAAC,MAAK;MACd,IAAI,CAACV,cAAc,CAACW,WAAW,CAAC,IAAI,CAACV,WAAW,CAAC,CAACS,SAAS,CAAEE,IAAI,IAAKA,IAAI,CAACC,KAAK,CAAC;IACnF,CAAC,CAAC;EACN;EAEAC,aAAaA,CAAA;IACX,IAAI,CAACP,kBAAkB,EAAEQ,WAAW,EAAE;EACxC;EAAC,QAAAC,CAAA,G;qBA5BUlB,aAAa,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbvB,aAAa;IAAAwB,OAAA,EAAbxB,aAAa,CAAAyB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}