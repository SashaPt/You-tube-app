{"ast":null,"code":"import { Subject, debounceTime, distinctUntilChanged, filter, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let SearchService = /*#__PURE__*/(() => {\n  class SearchService {\n    constructor() {\n      this.searchSubject = new Subject();\n      this.searchValue = '';\n    }\n    onSearch(value) {\n      if (value?.length >= 3) {\n        this.searchSubject.next(value);\n      }\n    }\n    onSubscribe() {\n      return this.searchSubject.pipe(filter(query => query.length > 2)).pipe(debounceTime(500)).pipe(distinctUntilChanged()).pipe(\n      // eslint-disable-next-line no-return-assign\n      switchMap(query => this.searchValue = query || ''));\n    }\n    static #_ = this.ɵfac = function SearchService_Factory(t) {\n      return new (t || SearchService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SearchService,\n      factory: SearchService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SearchService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}