{"ast":null,"code":"import { map, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport class YoutubeService {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.ids = [];\n  }\n  setItems(value) {\n    if (!value.trim()) {\n      this.items = of([]);\n      return of([]);\n    }\n    this.items = this.apiService.searchItems(value).pipe(map(resp => resp.items));\n    console.log(this.items);\n    return this.items;\n  }\n  getItems() {\n    return this.items;\n  }\n  getItem(id) {\n    return this.apiService.getItem(id).pipe(map(resp => resp.items), map(items => items.filter(i => i.id.videoId === id)[0]));\n  }\n  static #_ = this.ɵfac = function YoutubeService_Factory(t) {\n    return new (t || YoutubeService)(i0.ɵɵinject(i1.ApiService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: YoutubeService,\n    factory: YoutubeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","of","YoutubeService","constructor","apiService","ids","setItems","value","trim","items","searchItems","pipe","resp","console","log","getItems","getItem","id","filter","i","videoId","_","i0","ɵɵinject","i1","ApiService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Documents\\Learning\\RS\\Angular\\YouTube-app5\\sashapt-ANGULAR2023Q4\\src\\app\\youtube\\services\\youtube.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, map, of } from 'rxjs';\nimport { IItem } from '../models/search-item.model';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class YoutubeService {\n  items!: Observable<IItem[]>;\n\n  ids: string[] = [];\n\n  constructor(private apiService: ApiService) {}\n\n  setItems(value: string): Observable<IItem[]> {\n    if (!value.trim()) {\n      this.items = of([]);\n      return of([]);\n    }\n    this.items = this.apiService\n      .searchItems(value)\n      .pipe(map((resp) => resp.items));\n    console.log(this.items);\n    return this.items;\n  }\n\n  getItems(): Observable<IItem[]> {\n    return this.items;\n  }\n\n  getItem(id: string): Observable<IItem> {\n    return this.apiService.getItem(id).pipe(\n      map((resp) => resp.items),\n      map((items) => items.filter((i) => i.id.videoId === id)[0])\n    );\n  }\n}\n"],"mappings":"AACA,SAAqBA,GAAG,EAAEC,EAAE,QAAQ,MAAM;;;AAO1C,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAC,GAAG,GAAa,EAAE;EAE2B;EAE7CC,QAAQA,CAACC,KAAa;IACpB,IAAI,CAACA,KAAK,CAACC,IAAI,EAAE,EAAE;MACjB,IAAI,CAACC,KAAK,GAAGR,EAAE,CAAC,EAAE,CAAC;MACnB,OAAOA,EAAE,CAAC,EAAE,CAAC;;IAEf,IAAI,CAACQ,KAAK,GAAG,IAAI,CAACL,UAAU,CACzBM,WAAW,CAACH,KAAK,CAAC,CAClBI,IAAI,CAACX,GAAG,CAAEY,IAAI,IAAKA,IAAI,CAACH,KAAK,CAAC,CAAC;IAClCI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,KAAK,CAAC;IACvB,OAAO,IAAI,CAACA,KAAK;EACnB;EAEAM,QAAQA,CAAA;IACN,OAAO,IAAI,CAACN,KAAK;EACnB;EAEAO,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACb,UAAU,CAACY,OAAO,CAACC,EAAE,CAAC,CAACN,IAAI,CACrCX,GAAG,CAAEY,IAAI,IAAKA,IAAI,CAACH,KAAK,CAAC,EACzBT,GAAG,CAAES,KAAK,IAAKA,KAAK,CAACS,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACF,EAAE,CAACG,OAAO,KAAKH,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5D;EACH;EAAC,QAAAI,CAAA,G;qBA5BUnB,cAAc,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdxB,cAAc;IAAAyB,OAAA,EAAdzB,cAAc,CAAA0B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}