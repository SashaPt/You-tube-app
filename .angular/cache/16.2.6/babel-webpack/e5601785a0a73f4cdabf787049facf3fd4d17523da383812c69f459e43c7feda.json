{"ast":null,"code":"import { Subject, debounceTime, distinctUntilChanged, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./youtube.service\";\nexport class SearchService {\n  constructor(youtubeService) {\n    this.youtubeService = youtubeService;\n    this.items = [];\n    this.searchValue = '';\n    this.searchSubject = new Subject();\n  }\n  onSearch(value) {\n    this.searchSubject.next(value);\n  }\n  onSubscribe() {\n    return this.searchSubject.pipe(debounceTime(500), distinctUntilChanged(),\n    // eslint-disable-next-line no-return-assign\n    switchMap(query => this.searchValue = query || ''));\n  }\n  onUnsubscribe() {\n    this.searchSubscription?.unsubscribe();\n  }\n  static #_ = this.ɵfac = function SearchService_Factory(t) {\n    return new (t || SearchService)(i0.ɵɵinject(i1.YoutubeService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchService,\n    factory: SearchService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Subject","debounceTime","distinctUntilChanged","switchMap","SearchService","constructor","youtubeService","items","searchValue","searchSubject","onSearch","value","next","onSubscribe","pipe","query","onUnsubscribe","searchSubscription","unsubscribe","_","i0","ɵɵinject","i1","YoutubeService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Documents\\Learning\\RS\\Angular\\YouTube-app5\\sashapt-ANGULAR2023Q4\\src\\app\\youtube\\services\\search.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Subject,\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  switchMap,\n} from 'rxjs';\nimport { IItem } from '../models/search-item.model';\nimport { YoutubeService } from './youtube.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  items: IItem[] = [];\n\n  searchValue = '';\n\n  searchSubscription?: Subscription;\n\n  searchSubject = new Subject<string>();\n\n  constructor(private youtubeService: YoutubeService) {}\n\n  onSearch(value: string): void {\n    this.searchSubject.next(value);\n  }\n\n  onSubscribe() {\n    return this.searchSubject.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // eslint-disable-next-line no-return-assign\n      switchMap((query) => (this.searchValue = query || '')),\n    );\n  }\n\n  onUnsubscribe() {\n    this.searchSubscription?.unsubscribe();\n  }\n}\n"],"mappings":"AACA,SACEA,OAAO,EAEPC,YAAY,EACZC,oBAAoB,EACpBC,SAAS,QACJ,MAAM;;;AAOb,OAAM,MAAOC,aAAa;EASxBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IARlC,KAAAC,KAAK,GAAY,EAAE;IAEnB,KAAAC,WAAW,GAAG,EAAE;IAIhB,KAAAC,aAAa,GAAG,IAAIT,OAAO,EAAU;EAEgB;EAErDU,QAAQA,CAACC,KAAa;IACpB,IAAI,CAACF,aAAa,CAACG,IAAI,CAACD,KAAK,CAAC;EAChC;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACJ,aAAa,CAACK,IAAI,CAC5Bb,YAAY,CAAC,GAAG,CAAC,EACjBC,oBAAoB,EAAE;IACtB;IACAC,SAAS,CAAEY,KAAK,IAAM,IAAI,CAACP,WAAW,GAAGO,KAAK,IAAI,EAAG,CAAC,CACvD;EACH;EAEAC,aAAaA,CAAA;IACX,IAAI,CAACC,kBAAkB,EAAEC,WAAW,EAAE;EACxC;EAAC,QAAAC,CAAA,G;qBA1BUf,aAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbpB,aAAa;IAAAqB,OAAA,EAAbrB,aAAa,CAAAsB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}