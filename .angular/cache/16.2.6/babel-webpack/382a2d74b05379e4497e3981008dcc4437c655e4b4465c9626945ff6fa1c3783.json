{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport class YoutubeService {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.items = [];\n    this.ids = [];\n  }\n  setItems(value) {\n    if (!value) {\n      this.items = [];\n    }\n    this.apiService.searchItems(value).subscribe(resp => {\n      tap(() => {\n        const {\n          items\n        } = resp;\n        items.forEach(item => {\n          this.ids.push(item.id.videoId);\n        });\n      });\n    });\n    this.apiService.getItem(this.ids.toString()).subscribe(resp => {\n      this.items = resp.items;\n    });\n  }\n  getItems() {\n    return this.items;\n  }\n  getItem(id) {\n    return this.items.filter(i => i.id.videoId === id)[0];\n  }\n  static #_ = this.ɵfac = function YoutubeService_Factory(t) {\n    return new (t || YoutubeService)(i0.ɵɵinject(i1.ApiService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: YoutubeService,\n    factory: YoutubeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["tap","YoutubeService","constructor","apiService","items","ids","setItems","value","searchItems","subscribe","resp","forEach","item","push","id","videoId","getItem","toString","getItems","filter","i","_","i0","ɵɵinject","i1","ApiService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Documents\\Learning\\RS\\Angular\\YouTube-app5\\sashapt-ANGULAR2023Q4\\src\\app\\youtube\\services\\youtube.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { tap } from 'rxjs';\nimport { IItem } from '../models/search-item.model';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class YoutubeService {\n  items: IItem[] = [];\n\n  ids: string[] = [];\n\n  constructor(private apiService: ApiService) {}\n\n  setItems(value: string) {\n    if (!value) {\n      this.items = [];\n    }\n    this.apiService.searchItems(value).subscribe((resp) => {\n      tap(() => {\n        const { items } = resp;\n        items.forEach((item) => {\n          this.ids.push(item.id.videoId);\n        });\n      });\n    });\n    this.apiService.getItem(this.ids.toString()).subscribe((resp) => {\n      this.items = resp.items;\n    });\n  }\n\n  getItems(): IItem[] {\n    return this.items;\n  }\n\n  getItem(id: string): IItem {\n    return this.items.filter((i) => i.id.videoId === id)[0];\n  }\n}\n"],"mappings":"AACA,SAASA,GAAG,QAAQ,MAAM;;;AAO1B,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAJ9B,KAAAC,KAAK,GAAY,EAAE;IAEnB,KAAAC,GAAG,GAAa,EAAE;EAE2B;EAE7CC,QAAQA,CAACC,KAAa;IACpB,IAAI,CAACA,KAAK,EAAE;MACV,IAAI,CAACH,KAAK,GAAG,EAAE;;IAEjB,IAAI,CAACD,UAAU,CAACK,WAAW,CAACD,KAAK,CAAC,CAACE,SAAS,CAAEC,IAAI,IAAI;MACpDV,GAAG,CAAC,MAAK;QACP,MAAM;UAAEI;QAAK,CAAE,GAAGM,IAAI;QACtBN,KAAK,CAACO,OAAO,CAAEC,IAAI,IAAI;UACrB,IAAI,CAACP,GAAG,CAACQ,IAAI,CAACD,IAAI,CAACE,EAAE,CAACC,OAAO,CAAC;QAChC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAI,CAACZ,UAAU,CAACa,OAAO,CAAC,IAAI,CAACX,GAAG,CAACY,QAAQ,EAAE,CAAC,CAACR,SAAS,CAAEC,IAAI,IAAI;MAC9D,IAAI,CAACN,KAAK,GAAGM,IAAI,CAACN,KAAK;IACzB,CAAC,CAAC;EACJ;EAEAc,QAAQA,CAAA;IACN,OAAO,IAAI,CAACd,KAAK;EACnB;EAEAY,OAAOA,CAACF,EAAU;IAChB,OAAO,IAAI,CAACV,KAAK,CAACe,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACN,EAAE,CAACC,OAAO,KAAKD,EAAE,CAAC,CAAC,CAAC,CAAC;EACzD;EAAC,QAAAO,CAAA,G;qBA9BUpB,cAAc,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdzB,cAAc;IAAA0B,OAAA,EAAd1B,cAAc,CAAA2B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}