{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./youtube.service\";\nexport class SearchService {\n  constructor(youtubeService) {\n    this.youtubeService = youtubeService;\n    this.items = [];\n    this.searchSubject = new Subject();\n  }\n  onSearch(value) {\n    this.searchSubject.next(value);\n  }\n  static #_ = this.ɵfac = function SearchService_Factory(t) {\n    return new (t || SearchService)(i0.ɵɵinject(i1.YoutubeService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchService,\n    factory: SearchService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Subject","SearchService","constructor","youtubeService","items","searchSubject","onSearch","value","next","_","i0","ɵɵinject","i1","YoutubeService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Documents\\Learning\\RS\\Angular\\YouTube-app5\\sashapt-ANGULAR2023Q4\\src\\app\\youtube\\services\\search.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Subject,\n} from 'rxjs';\nimport { IItem } from '../models/search-item.model';\nimport { YoutubeService } from './youtube.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  items: IItem[] = [];\n\n  searchSubject = new Subject<string>();\n\n  constructor(private youtubeService: YoutubeService) {}\n\n  onSearch(value: string): void {\n    this.searchSubject.next(value);\n  }\n}\n"],"mappings":"AACA,SACEA,OAAO,QACF,MAAM;;;AAOb,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAJlC,KAAAC,KAAK,GAAY,EAAE;IAEnB,KAAAC,aAAa,GAAG,IAAIL,OAAO,EAAU;EAEgB;EAErDM,QAAQA,CAACC,KAAa;IACpB,IAAI,CAACF,aAAa,CAACG,IAAI,CAACD,KAAK,CAAC;EAChC;EAAC,QAAAE,CAAA,G;qBATUR,aAAa,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbb,aAAa;IAAAc,OAAA,EAAbd,aAAa,CAAAe,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}