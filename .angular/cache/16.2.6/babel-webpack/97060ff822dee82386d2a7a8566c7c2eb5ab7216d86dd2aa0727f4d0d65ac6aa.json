{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {\n      this.userLogin = 'user@login.com';\n      this.userPassword = 'User_Password1';\n      this.isLoggedIn = new BehaviorSubject(this.getIsLoggedIn());\n      this.isLoggedIn$ = this.isLoggedIn.asObservable();\n    }\n    compareAuth(auth) {\n      if (auth.login === this.userLogin && auth.password === this.userPassword) {\n        return true;\n      }\n      return false;\n    }\n    login(auth) {\n      if (this.compareAuth(auth)) {\n        localStorage.setItem('user', JSON.stringify({\n          auth\n        }));\n        this.isLoggedIn.next(true);\n      }\n    }\n    logout() {\n      localStorage.removeItem('user');\n      this.isLoggedIn.next(false);\n    }\n    /* eslint-disable class-methods-use-this */\n    getIsLoggedIn() {\n      if (localStorage.getItem('user')) {\n        return true;\n      }\n      return false;\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}